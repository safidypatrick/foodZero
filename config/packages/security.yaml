security:
    encoders:
        App\Document\User: bcrypt
    providers:
        # in_memory: { memory: ~ }
        database:
            mongodb:
                class: App\Document\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/auth/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticator:
                    - lexik_jwt_authentication.jwt_token_authenticator


    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/user/create, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/user/update/password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/auth/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/auth/reset, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/verification, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
